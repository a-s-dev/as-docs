initSidebarItems({"constant":[["MAX_ITEMS",""],["QUOTA_BYTES",""],["QUOTA_BYTES_PER_ITEM",""]],"fn":[["clear","The implementation of `storage[.sync].clear()`. On success this returns the StorageChanges defined by the chrome API - it's assumed the caller will arrange to deliver this to observers as defined in that API."],["get","The implementation of `storage[.sync].get()` - on success this always returns a Json object."],["get_from_db",""],["get_keys",""],["remove","The implementation of `storage[.sync].remove()`. On success this returns the StorageChanges defined by the chrome API - it's assumed the caller will arrange to deliver this to observers as defined in that API."],["remove_from_db",""],["save_to_db",""],["set","The implementation of `storage[.sync].set()`. On success this returns the StorageChanges defined by the chrome API - it's assumed the caller will arrange to deliver this to observers as defined in that API."],["wipe_all","While this API isn't available to extensions, Firefox wants a way to wipe all data for all addons but not sync the deletions. We also don't report the changes caused by the deletion. That means that after doing this, the next sync is likely to drag some data back in - which is fine. This is much like what the sync support for other components calls a \"wipe\", so we name it similarly."]],"struct":[["StorageChanges",""],["StorageValueChange",""]],"type":[["JsonMap",""]]});