(function() {var implementors = {};
implementors["logins"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"logins/struct.Login.html\" title=\"struct logins::Login\">Login</a>&gt; for <a class=\"struct\" href=\"logins/login/struct.LocalLogin.html\" title=\"struct logins::login::LocalLogin\">LocalLogin</a>","synthetic":false,"types":["logins::login::LocalLogin"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"logins/struct.Login.html\" title=\"struct logins::Login\">Login</a>&gt; for <a class=\"struct\" href=\"logins/login/struct.MirrorLogin.html\" title=\"struct logins::login::MirrorLogin\">MirrorLogin</a>","synthetic":false,"types":["logins::login::MirrorLogin"]}];
implementors["rc_crypto"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"rc_crypto/digest/struct.Digest.html\" title=\"struct rc_crypto::digest::Digest\">Digest</a>","synthetic":false,"types":["rc_crypto::digest::Digest"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"rc_crypto/hmac/struct.Signature.html\" title=\"struct rc_crypto::hmac::Signature\">Signature</a>","synthetic":false,"types":["rc_crypto::hmac::Signature"]}];
implementors["remerge"] = [{"text":"impl&lt;F:&nbsp;<a class=\"trait\" href=\"remerge/storage/records/trait.RecordFormat.html\" title=\"trait remerge::storage::records::RecordFormat\">RecordFormat</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.51/serde_json/map/struct.Map.html\" title=\"struct serde_json::map::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.51/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt;&gt; for <a class=\"struct\" href=\"remerge/storage/records/struct.Record.html\" title=\"struct remerge::storage::records::Record\">Record</a>&lt;F&gt;","synthetic":false,"types":["remerge::storage::records::Record"]}];
implementors["sync_guid"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"sync_guid/struct.Guid.html\" title=\"struct sync_guid::Guid\">Guid</a>","synthetic":false,"types":["sync_guid::Guid"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"sync_guid/struct.Guid.html\" title=\"struct sync_guid::Guid\">Guid</a>","synthetic":false,"types":["sync_guid::Guid"]}];
implementors["viaduct"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"viaduct/struct.HeaderName.html\" title=\"struct viaduct::HeaderName\">HeaderName</a>","synthetic":false,"types":["viaduct::headers::name::HeaderName"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"viaduct/struct.HeaderName.html\" title=\"struct viaduct::HeaderName\">HeaderName</a>","synthetic":false,"types":["viaduct::headers::name::HeaderName"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()