(function() {var implementors = {};
implementors["places"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"places/types/struct.VisitTransitionSet.html\" title=\"struct places::types::VisitTransitionSet\">VisitTransitionSet</a>","synthetic":false,"types":["places::types::visit_transition_set::VisitTransitionSet"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"places/types/enum.VisitTransition.html\" title=\"enum places::types::VisitTransition\">VisitTransition</a>","synthetic":false,"types":["places::types::VisitTransition"]}];
implementors["remerge"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.51/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"type\" href=\"remerge/storage/records/type.NativeRecord.html\" title=\"type remerge::storage::records::NativeRecord\">NativeRecord</a>","synthetic":false,"types":["remerge::storage::records::NativeRecord"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"remerge/storage/struct.NativeSchemaAndText.html\" title=\"struct remerge::storage::NativeSchemaAndText\">NativeSchemaAndText</a>&lt;'a&gt;","synthetic":false,"types":["remerge::storage::NativeSchemaAndText"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()