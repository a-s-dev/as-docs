initSidebarItems({"constant":[["COLLECTION_SYNCID_META_KEY",""],["GLOBAL_SYNCID_META_KEY",""],["LAST_SYNC_META_KEY",""],["MAX_FRECENCIES_TO_RECALCULATE_PER_CHUNK","The maximum number of URLs for which to recalculate frecencies at once. This is a trade-off between write efficiency and transaction time: higher maximums mean fewer write statements, but longer transactions, possibly blocking writes from other connections."]],"enum":[["UrlOrPlaceIdFragment","A helper that interpolates a SQL expression for querying a local item's URL. Note that the `&'static str` for each variant specifies the name of the column containing the URL or ID, not the URL or ID itself."]],"fn":[["item_kind_fragment",""]],"struct":[["BookmarksStore",""],["Driver",""],["ItemKindFragment","A helper that interpolates a SQL `CASE` expression for converting a local item type to a synced item kind. The expression evaluates to `NULL` if the type is unknown."],["ItemTypeFragment","A helper that interpolates a SQL `CASE` expression for converting a synced item kind to a local item type. The expression evaluates to `NULL` if the kind is unknown."],["LocalItemsFragment","A helper that interpolates a named SQL common table expression (CTE) for local items. The CTE may be included in a `WITH RECURSIVE` clause."],["MergeInterruptee","Adapts an interruptee to a Dogear abort signal."],["Merger",""],["NullableFragment","A helper that formats an optional value so that it can be included in a SQL statement. `None` values become SQL `NULL`s."],["RootsFragment","A helper that interpolates a SQL list containing the given bookmark root GUIDs."],["UploadItemsFragment","Formats a `SELECT` statement for staging local items in the `itemsToUpload` table."]]});