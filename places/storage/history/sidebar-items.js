initSidebarItems({"fn":[["add_visit",""],["apply_observation","Returns the RowId of a new visit in moz_historyvisits, or None if no new visit was added."],["apply_observation_direct","Returns the RowId of a new visit in moz_historyvisits, or None if no new visit was added."],["cleanup_pages","Clean up pages whose history has been modified, by either removing them entirely (if they are marked for removal, typically because all visits have been removed and there are no more foreign keys such as bookmarks) or updating their frecency."],["delete_all_visits_for_page","Removes all visits from a page."],["delete_everything",""],["delete_page","Deletes a page. Note that this throws a constraint violation if the page is bookmarked, or has a keyword or tags."],["delete_place_visit_at_time",""],["delete_place_visit_at_time_by_href",""],["delete_place_visit_at_time_in_tx",""],["delete_visits_between","Delete all visits in a date range."],["delete_visits_between_in_tx",""],["delete_visits_for","Deletes all visits for a page given its GUID, creating tombstones if necessary."],["delete_visits_for_in_tx","Internal function for deleting a page, creating a tombstone if necessary. Assumes a transaction is already set up by the caller."],["frecency_stale_at","Indicates if and when a URL's frecency was marked as stale."],["get_visit_count",""],["get_visit_infos",""],["get_visit_page",""],["get_visit_page_with_bound",""],["get_visited",""],["get_visited_into","Low level api used to implement both get_visited and the FFI get_visited call. Takes a slice where we should output the results, as well as a slice of index/url pairs."],["get_visited_urls","Get the set of urls that were visited between `start` and `end`. Only considers local visits unless you pass in `include_remote`."],["href_to_guid","Returns the GUID for the specified Url String, or None if it doesn't exist."],["insert_tombstone_for_page","Inserts a Sync tombstone for a page."],["insert_tombstones_for_all_page_visits","Inserts Sync tombstones for all of a page's visits."],["prune_destructively",""],["update_frecency",""],["url_to_guid","Returns the GUID for the specified Url, or None if it doesn't exist."],["wipe_local",""],["wipe_local_in_tx",""]],"mod":[["history_sync",""]],"static":[["DELETION_HIGH_WATER_MARK_META_KEY","When `delete_everything` is called (to perform a permanent local deletion), in addition to performing the deletion as requested, we make a note of the time when it occurred, and refuse to sync incoming visits from before this time."]],"struct":[["PageToClean",""]]});